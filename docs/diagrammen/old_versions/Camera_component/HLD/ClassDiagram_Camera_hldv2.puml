@startuml ClassDiagram_Camera_hld

title Class Diagram camera hld component

skin rose
skinparam classAttributeIconSize 0

namespace rclcpp {
    class Node #back:palegreen;
}


class CameraHLD {
    - imageCallback(image_msg : const sensor_msgs::msg::Image::SharedPtr) : void
    - convertImageMsgToCvMat(image_msg : const sensor_msgs::msg::Image::SharedPtr) : cv::Mat
    - publishFacePosition(frame : const cv::Mat&) : void
    - getCenterOfFace(face_roi : const cv::Rect&) : cv::Point
    - calculateEyeRoi(left_eye_landmark : const cv::Point&, right_eye_landmark : const cv::Point&) : std::array<cv::Rect, 2>
    - getDistanceToFace(face_roi : const cv::Rect) : float
    - createFacePositionMsg(center_of_face : const cv::Point, distance_to_face : float) : geometry_msgs::msg::PointStamped
    - getBiggestIrisDiameterInPixel(eye_rois : const std::array<cv::Rect, 2>&, frame : const cv::Mat&) : float
    - getIrisDiameterInPixel(iris_mesh_landmarks : const std::array<cv::Point3f, CLFML::IrisMesh::NUM_OF_IRIS_MESH_POINTS>) : float
    - publishDebugImage(frame : const cv::Mat&) : void
    - is_roi_within_bounds(roi : const cv::Rect, image : const cv::Mat) : bool
  
    - face_detector_ : CLFML::FaceDetection::FaceDetector
    - iris_mesh_ : CLFML::IrisMesh::IrisMesh
    - raw_image_sub_ : rclcpp::Subscription<sensor_msgs::msg::Image>::SharedPtr
    - face_position_pub_ : rclcpp::Publisher<geometry_msgs::msg::PointStamped>::SharedPtr
    - tf_frame_id_ : std::string
    - debug_image_pub_ : rclcpp::Publisher<sensor_msgs::msg::Image>::SharedPtr
}

Node <|-- CameraHLD

@enduml